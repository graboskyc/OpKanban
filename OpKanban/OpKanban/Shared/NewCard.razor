@using MongoDB.Bson;
@using Realms;
@using Realms.Sync;
@inject Data.Login l;

<label>Name</label>
<input type="text" @bind="txt_name" @bind:event="onchange" class="form-control" />

<label>SF Link</label>
<input type="text" @bind="txt_link" @bind:event="onchange" class="form-control" />

<label>POP Link</label>
<input type="text" @bind="txt_pop" @bind:event="onchange" class="form-control" />

<label>People</label>
<input type="text" @bind="txt_people" @bind:event="onchange" class="form-control" />

<label>NTSE</label>
<input type="text" @bind="txt_ntse" @bind:event="onchange" class="form-control" />

<label>Stage</label>
<select id="ddl_stage" name="ddl_stage" class="form-control" @bind="ddl_stage">
    @foreach(var o in Data.DDL_Stage.Stages) {
        <option value="@o.Value">@o.Key</option>
    }
</select>

<label>Color</label>
<select id="ddl_color" name="ddl_color" class="form-control" @bind="ddl_color">
    @foreach(var o in Data.DDL_Color.Colors) {
        <option value="@o.Value">@o.Key</option>
    }
</select>

<label>Product</label>
@if(prodList != null) {
    <select id="ddl_product" name="ddl_product" class="form-control" @bind="ddl_product" >
        @foreach(var p in prodList) {
            <option value="@p.Id.ToString()">@p.Name</option>
        }
    </select>
}

<br>
<button class="btn btn-lg btn-primary" @onclick="Insert" style="width:100%;">Track New Op</button>

@code {
    [Parameter]
    public string Stage { 
        get { return _stage; }
        set {
            if(value != _stage) {
                _stage = value;
                InvokeAsync(async() => await BuildForm());
            }
        }
    }

    private string _stage;

    [Parameter] 
    public EventCallback<bool> HasClosed { get; set; }
        
    private List<Data.Product> prodList = null;

    private string txt_name, txt_link, txt_pop, ddl_stage, ddl_color, txt_ntse, txt_people, txt_product, ddl_product;

    protected override async Task OnInitializedAsync()
    {
        BuildForm();
    }

    protected async Task BuildForm() {
        if(Stage != null) {
            ddl_stage = _stage;
        } else {
            ddl_stage = "Discovery";
        }
        ddl_color = "#E51400";
        prodList = l.realm.All<Data.Product>().OrderByDescending(p => p.Name).ToList();
        StateHasChanged();
    }
    private async Task Insert()
    {
        if (l.IsLoggedIn.Equals(true))
        {
            Data.KanbanTask kt = new Data.KanbanTask();
            kt.Name = txt_name;
            kt.Link = txt_link;
            kt.POP = txt_pop;
            kt.Stage = ddl_stage;
            kt.Partition = l.partition;
            kt.Color = ddl_color;
            kt.Team = txt_people;
            kt.NTSE = txt_ntse;
            kt.Product = l.realm.All<Data.Product>().FirstOrDefault(t => t.Id == MongoDB.Bson.ObjectId.Parse(ddl_product) );

            l.realm.Write(() =>
            {
                l.realm.Add(kt);
            });

            await HasClosed.InvokeAsync(true);
        }

    }
}

